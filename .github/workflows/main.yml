name: linting, testing, building

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4

      - name: Starting Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install modules
        run: npm ci --force

      - name: Build production project
        run: npm run build:prod
        if: always()

      - name: Build Storybook
        run: npm run storybook:build
        if: always()

      - name: Start Storybook server
        run: npm run storybook &
        if: always()

      - name: Wait for Storybook to be ready
        run: npx wait-on http://localhost:6006 --timeout 60000
        if: always()

      - name: Screenshot testing
        run: npm run test:ui:ci
        if: always()

      - name: Generate HTML report
        run: npm run test:ui:report
        if: always()

      - name: Setup Pages
        uses: actions/configure-pages@v5
        if: always()

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        if: always()
        with:
          path: '.loki'

      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v4

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4

      - name: Starting Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install modules
        run: npm ci --force

      - name: Linting TypeScript
        run: npm run lint:ts
        if: always()

      - name: Linting SCSS
        run: npm run lint:scss

      - name: Unit testing
        run: npm run test:unit
        if: always()
